name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Extract version from leafminer.h
        id: extract_version
        run: echo "::set-output name=version::$(grep -oP '(?<=_VERSION ").*?(?=")' leafminer.h)"

      - name: Adjust ini for release
        run: sh .github/scripts/release.sh

      - name: Build PlatformIO Project
        run: pio run

      - name: Archive artifacts
        run: |
          mkdir -p artifacts
          find .pio/build -name "firmware.bin" -exec sh -c 'cp "{}" "artifacts/firmware_$(basename $(dirname {})).bin"' \;
        working-directory: ${{ github.workspace }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builded-artifacts
          path: artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install softprops/action-gh-release
        run: pip install ghrelease

      - name: Create GitHub Release
        run: gh release create v${{ steps.extract_version.outputs.version }} -t "Release ${{ steps.extract_version.outputs.version }}" -n "Release ${{ steps.extract_version.outputs.version }}" -F changelog.md

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: builded-artifacts
          path: artifacts

      - name: Upload artifacts to the release
        run: |
          for file in artifacts/*.bin; do
            gh release upload v${{ steps.extract_version.outputs.version }} $file;
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
